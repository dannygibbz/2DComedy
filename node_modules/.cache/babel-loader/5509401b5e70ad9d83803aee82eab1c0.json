{"ast":null,"code":"var _jsxFileName = \"/Users/danielgibbons/2DComedy/src/MultiImageAndCaption.js\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\n\nvar generateImageStyle = function generateImageStyle(imageWidth, imageHeight, numberOfImages) {\n  if (imageHeight) {\n    return {\n      height: imageHeight,\n      marginRight: \"10px\",\n      marginBottom: \"10px\",\n      objectFit: \"cover\"\n    };\n  }\n\n  return {\n    width: \"\".concat(100 / numberOfImages - 3, \"%\"),\n    marginRight: \"10px\",\n    marginBottom: \"10px\",\n    objectFit: \"cover\"\n  };\n};\n\nexport default function MultiImageAndCaption(props) {\n  var captionStyle = props.captionStyle,\n      captionText = props.captionText,\n      imageWidth = props.imageWidth,\n      imageHeight = props.imageHeight,\n      imageUrls = props.imageUrls;\n\n  if (!(imageUrls && imageUrls.length)) {\n    return null;\n  }\n\n  if (imageWidth) {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        display: \"flex\",\n        justifyContent: \"center\",\n        flexWrap: \"wrap\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        width: imageWidth\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, imageUrls.map(function (imageUrl, inx) {\n      return React.createElement(\"img\", {\n        src: imageUrl,\n        style: generateImageStyle(imageWidth, imageHeight, imageUrls.length),\n        key: inx,\n        alt: \"img\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      });\n    }))), React.createElement(\"p\", {\n      style: captionStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, captionText));\n  }\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    style: {\n      display: \"flex\",\n      justifyContent: \"center\",\n      flexWrap: \"wrap\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, imageUrls.map(function (imageUrl, inx) {\n    return React.createElement(\"img\", {\n      src: imageUrl,\n      style: generateImageStyle(imageWidth, imageHeight, imageUrls.length),\n      key: inx,\n      alt: \"img\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    });\n  })), React.createElement(\"p\", {\n    style: captionStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, captionText));\n}\nMultiImageAndCaption.propTypes = {\n  captionText: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n  imageUrls: PropTypes.array.isRequired,\n  imageHeight: PropTypes.number,\n  imageWidth: PropTypes.number\n};\nMultiImageAndCaption.defaultProps = {\n  captionStyle: {\n    textAlign: \"center\",\n    marginTop: \"14px\",\n    marginBottom: \"14px\"\n  }\n};","map":{"version":3,"sources":["/Users/danielgibbons/2DComedy/src/MultiImageAndCaption.js"],"names":["React","PropTypes","generateImageStyle","imageWidth","imageHeight","numberOfImages","height","marginRight","marginBottom","objectFit","width","MultiImageAndCaption","props","captionStyle","captionText","imageUrls","length","display","justifyContent","flexWrap","map","imageUrl","inx","propTypes","oneOfType","string","element","array","isRequired","number","defaultProps","textAlign","marginTop"],"mappings":"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","sourcesContent":["import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nconst generateImageStyle = (imageWidth, imageHeight, numberOfImages) => {\n  if (imageHeight) {\n    return {\n      height: imageHeight,\n      marginRight: \"10px\",\n      marginBottom: \"10px\",\n      objectFit: \"cover\",\n    }\n  }\n\n  return {\n    width: `${100 / numberOfImages - 3}%`,\n    marginRight: \"10px\",\n    marginBottom: \"10px\",\n    objectFit: \"cover\",\n  }\n}\n\nexport default function MultiImageAndCaption(props) {\n  const { captionStyle, captionText, imageWidth, imageHeight, imageUrls } = props\n\n  if (!(imageUrls && imageUrls.length)) {\n    return null\n  }\n\n  if (imageWidth) {\n    return (\n      <div>\n        <div style={{ display: \"flex\", justifyContent: \"center\", flexWrap: \"wrap\" }}>\n          <div style={{ width: imageWidth }}>\n            {imageUrls.map((imageUrl, inx) => (\n              <img\n                src={imageUrl}\n                style={generateImageStyle(imageWidth, imageHeight, imageUrls.length)}\n                key={inx}\n                alt=\"img\"\n              />\n            ))}\n          </div>\n        </div>\n        <p style={captionStyle}>{captionText}</p>\n      </div>\n    )\n  }\n\n  return (\n    <div>\n      <div style={{ display: \"flex\", justifyContent: \"center\", flexWrap: \"wrap\" }}>\n        {imageUrls.map((imageUrl, inx) => (\n          <img\n            src={imageUrl}\n            style={generateImageStyle(imageWidth, imageHeight, imageUrls.length)}\n            key={inx}\n            alt=\"img\"\n          />\n        ))}\n      </div>\n      <p style={captionStyle}>{captionText}</p>\n    </div>\n  )\n}\n\nMultiImageAndCaption.propTypes = {\n  captionText: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n  imageUrls: PropTypes.array.isRequired,\n  imageHeight: PropTypes.number,\n  imageWidth: PropTypes.number,\n}\n\nMultiImageAndCaption.defaultProps = {\n  captionStyle: { textAlign: \"center\", marginTop: \"14px\", marginBottom: \"14px\" },\n}\n"]},"metadata":{},"sourceType":"module"}