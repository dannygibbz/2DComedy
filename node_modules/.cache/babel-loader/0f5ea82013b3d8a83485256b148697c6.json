{"ast":null,"code":"import _objectSpread from \"/Users/danielgibbons/2DComedy/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/danielgibbons/2DComedy/src/Contact.js\";\nimport React from \"react\";\nimport { Form, Input, notification, Button } from \"antd\";\nimport Header from \"./Headers/Header.js\";\nvar FormItem = Form.Item;\n\nvar checkStatus = function checkStatus(res, opts) {\n  if (res.status >= 200 && res.status < 400) {\n    return opts && opts.parseAs === \"json\" ? res.json() : res.text();\n  } else {\n    return Promise.reject(res);\n  }\n};\n\nfunction ContactForm(props) {\n  var handleSubmit = function handleSubmit(e) {\n    e.preventDefault();\n    props.form.validateFieldsAndScroll(function (err, values) {\n      if (!err) {\n        console.log(\"Received values of form: \", values);\n        /* NOTE: each key in values must be 1-1 with the name attributes of the form definition in index.html */\n\n        var fetchOpts = {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify(_objectSpread({\n            \"form-name\": \"contact\"\n          }, values))\n        };\n        fetch(\"/.netlify/functions/handleContact\", fetchOpts).then(function (res) {\n          return checkStatus(res);\n        }).then(function (text) {\n          notification.open({\n            message: \"Message Sent\",\n            description: \"Thanks for reaching out! We'll get back to you shortly.\",\n            duration: 3,\n            placement: \"bottomRight\"\n          });\n          props.form.resetFields();\n        }).catch(function (err) {\n          return console.log(\"Error: \", err);\n        });\n      }\n    });\n  };\n\n  var getFieldDecorator = props.form.getFieldDecorator;\n  var formItemLayout = {\n    wrapperCol: {\n      xs: {\n        span: 24\n      },\n      sm: {\n        span: 24\n      }\n    }\n  };\n  return React.createElement(Form, {\n    name: \"contact\",\n    onSubmit: handleSubmit,\n    layout: \"vertical\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(FormItem, Object.assign({}, formItemLayout, {\n    label: \"Name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }), getFieldDecorator(\"name\", {\n    rules: [{\n      required: true,\n      message: \"Please input your name\",\n      whitespace: true\n    }]\n  })(React.createElement(Input, {\n    name: \"name\",\n    placeholder: \"Enter your name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }))), React.createElement(FormItem, Object.assign({}, formItemLayout, {\n    label: \"Email Address\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }), getFieldDecorator(\"email\", {\n    rules: [{\n      type: \"email\",\n      message: \"The input is not a valid email address\"\n    }, {\n      required: true,\n      message: \"Please input your email\"\n    }]\n  })(React.createElement(Input, {\n    name: \"email\",\n    placeholder: \"Enter your email\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }))), React.createElement(FormItem, Object.assign({}, formItemLayout, {\n    label: \"Message\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }), getFieldDecorator(\"message\", {\n    rules: [{\n      required: true,\n      message: \"Please input a message\",\n      whitespace: true\n    }]\n  })(React.createElement(Input.TextArea, {\n    name: \"message\",\n    placeholder: \"Message goes here\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    \"data-netlify-recaptcha\": true,\n    className: \"mb-2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }), React.createElement(FormItem, {\n    style: {\n      display: \"flex\",\n      justifyContent: \"center\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, React.createElement(Button, {\n    type: \"default\",\n    htmlType: \"submit\",\n    style: {\n      backgroundColor: \"#4B6EDA\",\n      color: \"#FFFFFF\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, \"Send Message\")));\n}\n\nvar WrappedContactForm = Form.create()(ContactForm);\nexport default function Contact() {\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, React.createElement(Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    style: {\n      display: \"flex\",\n      justifyContent: \"center\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    style: {\n      width: \"500px\",\n      background: \"#f5f5f5\",\n      marginTop: \"20px\",\n      padding: \"20px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, React.createElement(WrappedContactForm, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, \"For Booking:\"), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }), \" Email: \", React.createElement(\"a\", {\n    href: \"mailto:2dansinavan@gmail.com\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, \"2dansinavan@gmail.com\")))));\n}","map":{"version":3,"sources":["/Users/danielgibbons/2DComedy/src/Contact.js"],"names":["React","Form","Input","notification","Button","Header","FormItem","Item","checkStatus","res","opts","status","parseAs","json","text","Promise","reject","ContactForm","props","handleSubmit","e","preventDefault","form","validateFieldsAndScroll","err","values","console","log","fetchOpts","method","headers","body","JSON","stringify","fetch","then","open","message","description","duration","placement","resetFields","catch","getFieldDecorator","formItemLayout","wrapperCol","xs","span","sm","rules","required","whitespace","type","display","justifyContent","backgroundColor","color","WrappedContactForm","create","Contact","width","background","marginTop","padding"],"mappings":"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","sourcesContent":["import React from \"react\"\nimport { Form, Input, notification, Button } from \"antd\"\nimport Header from \"./Headers/Header.js\"\nconst FormItem = Form.Item\n\nconst checkStatus = (res, opts) => {\n  if (res.status >= 200 && res.status < 400) {\n    return opts && opts.parseAs === \"json\" ? res.json() : res.text()\n  } else {\n    return Promise.reject(res)\n  }\n}\n\nfunction ContactForm(props) {\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    props.form.validateFieldsAndScroll((err, values) => {\n      if (!err) {\n        console.log(\"Received values of form: \", values)\n        /* NOTE: each key in values must be 1-1 with the name attributes of the form definition in index.html */\n        const fetchOpts = {\n          method: \"POST\",\n          headers: { \"Content-Type\": \"application/json\" },\n          body: JSON.stringify({ \"form-name\": \"contact\", ...values }),\n        }\n        fetch(\"/.netlify/functions/handleContact\", fetchOpts)\n          .then((res) => checkStatus(res))\n          .then((text) => {\n            notification.open({\n              message: \"Message Sent\",\n              description: \"Thanks for reaching out! We'll get back to you shortly.\",\n              duration: 3,\n              placement: \"bottomRight\",\n            })\n            props.form.resetFields()\n          })\n          .catch((err) => console.log(\"Error: \", err))\n      }\n    })\n  }\n\n  const { getFieldDecorator } = props.form\n\n  const formItemLayout = {\n    wrapperCol: {\n      xs: { span: 24 },\n      sm: { span: 24 },\n    },\n  }\n  return (\n    <Form name=\"contact\" onSubmit={handleSubmit} layout=\"vertical\">\n      <FormItem {...formItemLayout} label=\"Name\">\n        {getFieldDecorator(\"name\", {\n          rules: [\n            {\n              required: true,\n              message: \"Please input your name\",\n              whitespace: true,\n            },\n          ],\n        })(<Input name=\"name\" placeholder=\"Enter your name\" />)}\n      </FormItem>\n      <FormItem {...formItemLayout} label=\"Email Address\">\n        {getFieldDecorator(\"email\", {\n          rules: [\n            {\n              type: \"email\",\n              message: \"The input is not a valid email address\",\n            },\n            {\n              required: true,\n              message: \"Please input your email\",\n            },\n          ],\n        })(<Input name=\"email\" placeholder=\"Enter your email\" />)}\n      </FormItem>\n      <FormItem {...formItemLayout} label=\"Message\">\n        {getFieldDecorator(\"message\", {\n          rules: [\n            {\n              required: true,\n              message: \"Please input a message\",\n              whitespace: true,\n            },\n          ],\n        })(<Input.TextArea name=\"message\" placeholder=\"Message goes here\" />)}\n      </FormItem>\n      <div data-netlify-recaptcha className=\"mb-2\" />\n      <FormItem style={{ display: \"flex\", justifyContent: \"center\" }}>\n        <Button\n          type=\"default\"\n          htmlType=\"submit\"\n          style={{ backgroundColor: \"#4B6EDA\", color: \"#FFFFFF\" }}\n        >\n          Send Message\n        </Button>\n      </FormItem>\n    </Form>\n  )\n}\n\nconst WrappedContactForm = Form.create()(ContactForm)\n\nexport default function Contact() {\n  return (\n    <div>\n      <Header />\n      <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n        <div\n          style={{\n            width: \"500px\",\n            background: \"#f5f5f5\",\n            marginTop: \"20px\",\n            padding: \"20px\",\n          }}\n        >\n          <WrappedContactForm />\n          <div>\n            <b>For Booking:</b>\n            <br /> Email: <a href=\"mailto:2dansinavan@gmail.com\">2dansinavan@gmail.com</a>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}