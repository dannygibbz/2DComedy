{"ast":null,"code":"import _slicedToArray from \"/Users/danielgibbons/2DComedy/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/danielgibbons/2DComedy/src/NoCity.js\";\nimport React, { useState } from \"react\";\nimport Header from \"./Headers/Header.js\";\nimport { Form, Input, Button } from \"antd\";\nimport axios from \"axios\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nvar FormItem = Form.Item; // const checkStatus = (res, opts) => {\n//   if (res.status >= 200 && res.status < 400) {\n//     return opts && opts.parseAs === \"json\" ? res.json() : res.text()\n//   } else {\n//     return Promise.reject(res)\n//   }\n// }\n\nfunction validateEmail(email) {\n  var re = /^([\\w-]+(?:\\.[\\w-]+)*)@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,6}(?:\\.[a-z]{2})?)$/i;\n  return re.test(email);\n}\n\nfunction NoCity(props) {\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      emailMessage = _useState4[0],\n      setEmailMessage = _useState4[1];\n\n  var onClick = function onClick() {\n    if (!validateEmail(email)) {\n      setEmailMessage(\"Not a valid email\");\n      return;\n    }\n\n    toast.success(\"Hold up, saving your email...\", {\n      position: toast.POSITION.TOP_CENTER,\n      hideProgressBar: true,\n      autoClose: 3000,\n      className: \"blueSuccessColor\"\n    });\n    axios({\n      method: \"POST\",\n      url: \"/.netlify/functions/handleEmail\",\n      data: {\n        email: email\n      },\n      headers: {\n        \"Content-Type\": \"application/x-www-form-urlencoded\"\n      },\n      json: true\n    }).then(function (response) {\n      toast.success(\"Email successfully saved\", {\n        position: toast.POSITION.TOP_CENTER,\n        hideProgressBar: true,\n        autoClose: 3000,\n        className: \"blueSuccessColor\"\n      });\n      setEmail(\"\");\n    }).catch(function (error) {\n      console.log(error);\n    });\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, React.createElement(ToastContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }), React.createElement(Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    style: {\n      display: \"flex\",\n      justifyContent: \"center\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    style: {\n      color: \"black\",\n      fontFamily: \"Nobile, sans-serif\",\n      fontSize: \"8vw\",\n      textAlign: \"center\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, props.cityName)), React.createElement(\"div\", {\n    style: {\n      marginRight: \"20%\",\n      marginLeft: \"20%\",\n      marginTop: \"20px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    style: {\n      margin: \"auto\",\n      maxWidth: \"600px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, props.cityState === \"notVisited\" && React.createElement(\"p\", {\n    className: \"copytext\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, \"Unfortunately, we haven't visited \", props.cityName, \" yet. Put your email down below to be the first to know when we visit this city.\"), props.cityState === \"pending\" && React.createElement(\"p\", {\n    className: \"copytext\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, \"We've been to \", props.cityName, \". But we still need to write a bomb ass article for it. Put your email down to be the first to know when we have some new hot fire for ya.\"), React.createElement(FormItem, {\n    label: \"Email Address\",\n    style: {\n      display: \"flex\",\n      justifyContent: \"center\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, React.createElement(Input, {\n    style: {\n      width: \"400px\"\n    },\n    name: \"email\",\n    placeholder: \"Enter your email\",\n    value: email,\n    onChange: function onChange(e) {\n      setEmail(e.target.value);\n      setEmailMessage(\"\");\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }), emailMessage && React.createElement(\"div\", {\n    style: {\n      color: \"red\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, emailMessage)), React.createElement(\"div\", {\n    style: {\n      display: \"flex\",\n      justifyContent: \"center\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, React.createElement(Button, {\n    type: \"default\",\n    htmlType: \"submit\",\n    style: {\n      backgroundColor: \"#4B6EDA\",\n      color: \"#FFFFFF\"\n    },\n    onClick: onClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, \"Submit\")))));\n}\n\nexport default NoCity;","map":{"version":3,"sources":["/Users/danielgibbons/2DComedy/src/NoCity.js"],"names":["React","useState","Header","Form","Input","Button","axios","ToastContainer","toast","FormItem","Item","validateEmail","email","re","test","NoCity","props","setEmail","emailMessage","setEmailMessage","onClick","success","position","POSITION","TOP_CENTER","hideProgressBar","autoClose","className","method","url","data","headers","json","then","response","catch","error","console","log","display","justifyContent","color","fontFamily","fontSize","textAlign","cityName","marginRight","marginLeft","marginTop","margin","maxWidth","cityState","width","e","target","value","backgroundColor"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\"\nimport Header from \"./Headers/Header.js\"\nimport { Form, Input, Button } from \"antd\"\nimport axios from \"axios\"\n\nimport { ToastContainer, toast } from \"react-toastify\"\nimport \"react-toastify/dist/ReactToastify.css\"\n\nconst FormItem = Form.Item\n\n// const checkStatus = (res, opts) => {\n//   if (res.status >= 200 && res.status < 400) {\n//     return opts && opts.parseAs === \"json\" ? res.json() : res.text()\n//   } else {\n//     return Promise.reject(res)\n//   }\n// }\n\nfunction validateEmail(email) {\n  const re = /^([\\w-]+(?:\\.[\\w-]+)*)@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,6}(?:\\.[a-z]{2})?)$/i\n  return re.test(email)\n}\n\nfunction NoCity(props) {\n  const [email, setEmail] = useState(\"\")\n  const [emailMessage, setEmailMessage] = useState(\"\")\n\n  const onClick = () => {\n    if (!validateEmail(email)) {\n      setEmailMessage(\"Not a valid email\")\n      return\n    }\n\n    toast.success(\"Hold up, saving your email...\", {\n      position: toast.POSITION.TOP_CENTER,\n      hideProgressBar: true,\n      autoClose: 3000,\n      className: \"blueSuccessColor\",\n    })\n\n    axios({\n      method: \"POST\",\n      url: \"/.netlify/functions/handleEmail\",\n      data: {\n        email,\n      },\n      headers: {\n        \"Content-Type\": \"application/x-www-form-urlencoded\",\n      },\n      json: true,\n    })\n      .then((response) => {\n        toast.success(\"Email successfully saved\", {\n          position: toast.POSITION.TOP_CENTER,\n          hideProgressBar: true,\n          autoClose: 3000,\n          className: \"blueSuccessColor\",\n        })\n        setEmail(\"\")\n      })\n      .catch((error) => {\n        console.log(error)\n      })\n  }\n\n  return (\n    <div>\n      <ToastContainer />\n      <Header />\n      <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n        <div\n          style={{\n            color: \"black\",\n            fontFamily: \"Nobile, sans-serif\",\n            fontSize: \"8vw\",\n            textAlign: \"center\",\n          }}\n        >\n          {props.cityName}\n        </div>\n      </div>\n\n      <div style={{ marginRight: \"20%\", marginLeft: \"20%\", marginTop: \"20px\" }}>\n        <div\n          style={{\n            margin: \"auto\",\n            maxWidth: \"600px\",\n          }}\n        >\n          {props.cityState === \"notVisited\" && (\n            <p className=\"copytext\">\n              Unfortunately, we haven't visited {props.cityName} yet. Put your email down\n              below to be the first to know when we visit this city.\n            </p>\n          )}\n          {props.cityState === \"pending\" && (\n            <p className=\"copytext\">\n              We've been to {props.cityName}. But we still need to write a bomb ass\n              article for it. Put your email down to be the first to know when we have\n              some new hot fire for ya.\n            </p>\n          )}\n          <FormItem\n            label=\"Email Address\"\n            style={{ display: \"flex\", justifyContent: \"center\" }}\n          >\n            <Input\n              style={{ width: \"400px\" }}\n              name=\"email\"\n              placeholder=\"Enter your email\"\n              value={email}\n              onChange={(e) => {\n                setEmail(e.target.value)\n                setEmailMessage(\"\")\n              }}\n            />\n            {emailMessage && <div style={{ color: \"red\" }}>{emailMessage}</div>}\n          </FormItem>\n          <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n            <Button\n              type=\"default\"\n              htmlType=\"submit\"\n              style={{ backgroundColor: \"#4B6EDA\", color: \"#FFFFFF\" }}\n              onClick={onClick}\n            >\n              Submit\n            </Button>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default NoCity\n"]},"metadata":{},"sourceType":"module"}